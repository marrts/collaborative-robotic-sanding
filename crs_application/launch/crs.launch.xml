<?xml version="1.0"?>
<launch>
	<arg name="ns_arg" default="crs"/>
  <arg name="sim" default="true"/>
  <arg name="swri" default="false"/>
  <arg name="camera" default="true"/>
  <let name="state_machine_file" value="$(find-pkg-share crs_application)/resources/crs_process.scxml"/>
        <let name="group_ns" value="$(var ns_arg)"/>
        <let name="sim_robot" value="$(var sim)"/>
        <let name="database_dir" value="$(env HOME)/crs_data"/>
        <let name="at_swri" value="$(var swri)"/>
        <let name="use_camera" value="$(var camera)"/>
	<group>		
		<push-ros-namespace namespace="$(var group_ns)"/>
		
		<include file="$(find-pkg-share crs_application)/launch/load_preview_robot_model.launch.xml">
		</include>		

	    <include file="$(find-pkg-share crs_application)/launch/load_robot_model.launch.xml">
	    </include>
		
    <include file="$(find-pkg-share crs_support)/launch/environment_launch.launch.py" unless="$(var at_swri)">
                    <arg name="sim_robot" value="$(var sim_robot)"/>
		</include>

		<include file="$(find-pkg-share crs_support)/launch/environment_launch_swri.launch.py" if="$(var at_swri)">
		                <arg name="sim_robot" value="$(var sim_robot)"/>
		</include>
		
		<node pkg="crs_application" exec="crs_application_node" name="crs_main" output="screen">
			<param name="state_machine_file" value="$(var state_machine_file)"/>
		</node>		

    <group if="$(var use_camera)">
      <node pkg="realsense_node" exec="realsense_node" name="realsense_node" prefix="xterm -e"
            output="log" unless="$(var sim_robot)"/>
    </group>
				
		<!-- ros2 component standalone crs_perception crs_perception::LocalizeToPart  -->
		<!--<let name="node_ns" value="/$(var group_ns)"/>
	    <executable cmd="ros2 component standalone crs_perception crs_perception::LocalizeToPart - -node-namespace $(var node_ns)" 
	    	name="$(var group_ns)/localization_node" output="screen" shell="true"/>-->
	    	
    <!-- This launch file does not honor the ns pushed to it-->
    <include file="$(find-pkg-share crs_application)/launch/perception.launch.py"/> 	    
	    	
		<!-- rviz -->
		<let name="rviz_config" value="$(find-pkg-share crs_application)/resources/crs.rviz"/>
		<node pkg="rviz2" exec="rviz2"  launch-prefix="xterm -e" args="-d $(var rviz_config) --ros-args --log-level INFO"
		 	output="screen">
		 	<param name="default_config_file" value="$(find-pkg-share crs_application)/config/crs.yaml"/>
		 	<!--<param name="database_dir" value="$(find-pkg-share crs_data)/data/offline_generated_paths"/>-->
		 	<param name="database_dir" value="$(var database_dir)"/>
		 </node>
		

	</group>
</launch>
